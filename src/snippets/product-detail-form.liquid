{%- comment %}

  Product Detail Form Snippet
  ------------------------------------------------------------------------------

  Usage:

  {% include 'product-detail-form',
              product: { product } - required
              current_variant: { variant } - optional
              block: { block } - optional
              submit_button_contents: { string } - required
              show_star_rating: { bool } optional - defaults to false
  %}

{% endcomment -%}

{% if current_variant == blank %}
  {% assign current_variant = product.selected_or_first_available_variant %}
{% endif %}

{% if show_star_rating == blank %}
  {% assign show_star_rating = false %}
{% endif %}

<div class="product-detail-form" data-product-detail-form>
  <div style="margin-top: auto;">
    <div class="product-titles">
      <h1>
        {{ product.title }}
      </h1>
      {% if show_star_rating %}
        {% render 'yotpo-star-rating' %} 
      {% endif %}
      {% if block.settings.subtitle != blank %}
        <div class="p2 {% if template.suffix == 'extended' %}d-none d-md-block{% endif %}">
          {{ block.settings.subtitle }}
        </div>
      {% endif %}
    </div>

    <div class="rte product-detail-form-width">
      {{ product.description }}
    </div>

    <div>
      {% unless product.has_only_default_variant %}
        {% for option in product.options_with_values %}     
          {% capture option_alt_ui %}
            {% comment %}
              To enable alternative variant option value select UI, create your markup here with the following data attributes.

              parent - 'data-option-position="{{ option.position }}" data-variant-option-value-list'
                child - 'data-variant-option-value="{{ value }}"'

              These data attributes are used to attach click events and update the selected variant when one is clicked.
              The child element should respond to some sort of 'active' class to reflect the selected value.  You may need to change the actual class or 'active' state logic inside the callback.

              See: `_scripts/components/productForm.js:onVariantOptionValueClick`

              For example, to show a list of sizes..

              {% if option.name == "Size" %}
                <div data-option-position="{{ option.position }}" data-variant-option-value-list>
                  {% for value in option.values %}
                    <span class="{% if option.selected_value == value %} is-active{% endif %}" data-variant-option-value="{{ value }}">
                      {{ value }}
                    </span>
                  {% endfor %}
                </div>
              {% endif %}

              If markup is output inside this capture blow, the corresponding select tag is hidden
            {% endcomment %}
          {% endcapture %}

          <div class="selector-wrapper form-group js">
            <label for="SingleOptionSelector-{{ forloop.index0 }}">
              {{ option.name }}
            </label>

            <select
              id="SingleOptionSelector-{{ forloop.index0 }}"
              class="form-control"
              data-single-option-selector
              data-index="option{{ option.position }}"
              {% if option_alt_ui != blank %}style="display: none"{% endif %}>
              {% for value in option.values %}
                <option
                  value="{{ value | escape }}"
                  {% if option.selected_value == value %}selected="selected"{% endif %}>
                    {{ value }}
                </option>
              {% endfor %}
            </select>
          </div>
        {% endfor %}
      {% endunless %}

      <div class="form-group form-group--purchase-options">

        <div class="quantity-adjuster quantity-adjuster--light" data-quantity-adjuster>
          <button class="quantity-adjuster__decrement" data-decrement>-</button>
          <input type="number" value="1" min="1" />
          <button class="quantity-adjuster__increment" data-increment>+</button>
        </div>

        <button
          type="submit"
          name="add"
          class="btn btn-primary btn-block"
          style=""
          data-add-to-cart
          {% unless current_variant.available %}disabled="disabled"{% endunless %}>
          {{ submit_button_contents }}
          
        </button>
      </div>    

      <div class="product-detail-form-width{% if template.suffix == 'extended' %} d-none d-md-block{% endif %}" style="margin: 2rem 0;"></div>
    </div>    
  </div>

  {% if block %}
    {% capture expandable_details_html %}
      {% for i in (1..3) %}
        {% assign detail_title_handle = 'detail_title_' | append: i %}
        {% assign detail_content_handle = 'detail_content_' | append: i %}
        {% assign detail_title = block.settings[detail_title_handle] %}
        {% assign detail_content = block.settings[detail_content_handle] %}
        {% assign expandable_id = 'expand-' | append: block.id | append: '-' | append: i %}

        {% if detail_title != blank or detail_content != blank %}
          <div class="expandable-list">
            <a href="#"
               class="expandable-list__header"
               data-toggle="collapse"
               data-target="#{{ expandable_id }}"
               aria-expanded="false"
               aria-controls="{{ expandable_id }}"
            >
              <span class="d-inline-block" style="margin-right: 15px">
                {{ i | prepend: '0' | append: '.' }}
              </span>
              {{ detail_title }}
            </a>
            <div id="{{ expandable_id }}" class="collapse">
              <div class="expandable-list__body">
                {{ detail_content }}
              </div>
            </div>
          </div>
        {% endif %}
      {% endfor %}
    {% endcapture %}

    {{ expandable_details_html }}
  {% endif %}
</div>
